---
import { SITE_TITLE } from "../consts";
import Icon from "./Icon.astro";
import NavbarBurger from "./NavbarBurger.astro";
import NavbarLink from "./NavbarLink.astro";

const Links: { label: string; href: string }[] = [
	{ label: "_home", href: "/" },
	{ label: "_about", href: "/me" },
	{ label: "_project", href: "/project" },
	{ label: "_contact", href: "/contact" },
];
---

<div id="navbar" class="group/navbar">
	<nav
		class="flex justify-center h-12 border-b border-b-white/50 bg-white/30 backdrop-blur-lg md:justify-between drop-shadow-lg"
	>
		<div
			class="flex flex-row items-center justify-between w-full md:w-56 md:justify-center bg-gradient-to-l from-blue-900 to-sky-700 bg-clip-text"
		>
			<a href="/" class="inline-flex items-center px-4 text-xl font-bold">
				<Icon icon="ahmaadn" gradient size="48px" />
				<span>{SITE_TITLE}</span>
			</a>
			<burger-btn>
				<NavbarBurger />
			</burger-btn>
		</div>
		<ul
			id="nav-menu"
			class="justify-center hidden mr-2 text-base font-bold md:inline-flex"
		>
			{
				Links.map(({ label, href }) => (
					<li class="relative flex items-center group/item">
						<NavbarLink
							href={href}
							className="px-3 group-hover/item:text-sky-700"
						>
							<span>{label}</span>
						</NavbarLink>
					</li>
				))
			}
		</ul>
	</nav>
	<div
		id="nav-dialog"
		class="absolute inset-0 z-20 flex justify-end transition-all aria-hidden:hidden"
		aria-expanded="false"
		hidden
	>
		<label
			id="nav-dialog-overlay"
			class="fixed inset-0 hidden bg-black/20 group-[.active]/navbar:block"
		></label>
		<nav
			class="group-[.active]/navbar:translate-x-0 translate-x-full bg-white/50 w-2/3 h-full ease-in-out duration-300 transform relative backdrop-blur py-6 space-y-3"
		>
			<burger-btn class="absolute top-0 right-0">
				<NavbarBurger />
			</burger-btn>
			<h1 class="text-xl font-bold text-center">{SITE_TITLE}</h1>
			<ul class="mx-3 space-y-2 text-sm font-bold">
				{
					Links.map(({ label, href }) => (
						<li class="group/item">
							<NavbarLink
								href={href}
								className="group-hover/item:bg-sky-700 group-focus/item:text-sky-700 w-full flex px-3 py-1 rounded-sm group-hover/item:text-white"
							>
								{label}
							</NavbarLink>
						</li>
					))
				}
			</ul>
		</nav>
	</div>
</div>

<script>
	const nav = document.getElementById("navbar");
	const navDialog = document.getElementById("nav-dialog");
	const navDialogOverlay = document.getElementById("nav-dialog-overlay");

	const openNav = (hidden: boolean) => {
		if (navDialog) {
			navDialog.setAttribute("aria-expanded", hidden ? "true" : "false");
			navDialog.hidden = !hidden;
			if (hidden) {
				nav?.classList.add("active");
			} else {
				nav?.classList.remove("active");
			}
		}
	};

	navDialogOverlay?.addEventListener("click", () => openNav(navDialog.hidden));

	const handleViewports = (e: MediaQueryList | MediaQueryListEvent) => {
		if (navDialog) {
			if (e.matches) {
				openNav(false);
				navDialog.setAttribute("aria-hidden", "true");
			} else {
				navDialog.setAttribute("aria-hidden", "false");
			}
		}
	};

	const mediaQueries = window.matchMedia("(min-width: 768px)");
	handleViewports(mediaQueries);
	mediaQueries.addEventListener("change", handleViewports);

	class BurgerButton extends HTMLElement {
		constructor() {
			super();
			const btn = this.querySelector("button");
			btn?.addEventListener("click", () => openNav(navDialog.hidden));
		}
	}
	customElements.define("burger-btn", BurgerButton);
</script>

<style>
	#nav-dialog[hidden] {
		pointer-events: none;
		overflow: hidden;
		opacity: 0;
		visibility: hidden;
	}
</style>
